
syntax = "proto3";

package dronecorerpc;

// Interface exported by the server.
service DroneCoreRPC {
    rpc Arm(Empty) returns(ActionResult) {}
    rpc TakeOff(Empty) returns(ActionResult) {}
    rpc Land(Empty) returns(ActionResult) {}
    rpc SendMission(Mission) returns(MissionResult) {}
    rpc StartMission(Empty) returns(MissionResult) {}
    rpc TelemetryPositionSubscription(Empty) returns(stream TelemetryPosition) {}
}

message Empty {}

message ActionResult {

    enum Result {
        SUCCESS = 0;
        NO_DEVICE = 1;
        CONNECTION_ERROR = 2;
        BUSY = 3;
        COMMAND_DENIED = 4;
        COMMAND_DENIED_LANDED_STATE_UNKNOWN = 5;
        COMMAND_DENIED_NOT_LANDED = 6;
        TIMEOUT = 7;
        UNKNOWN = 8;
    }
    Result result = 1;
    string result_str = 2;
}

message MissionResult {

    enum Result {
        SUCCESS = 0;
        ERROR = 1;
        TOO_MANY_MISSION_ITEMS = 2;
        BUSY = 3;
        TIMEOUT = 4;
        INVALID_ARGUMENT = 5;
        UNKNOWN = 6;
    }
    Result result = 1;
    string result_str = 2;
}

message MissionItem {
    double latitude_deg = 1;
    double longitude_deg = 2;
    double relative_altitude_m = 3;
    float speed_m_s = 4;
    bool is_fly_through = 5;
    float gimbal_pitch_deg = 6;
    float gimbal_yaw_deg = 7;

    enum CameraAction {
        NONE = 0;
        TAKE_PHOTO = 1;
        START_PHOTO_INTERVAL = 2;
        STOP_PHOTO_INTERVAL = 3;
        START_VIDEO = 4;
        STOP_VIDEO = 5;
    }
    CameraAction camera_action = 8;
}

message Mission {
    repeated MissionItem mission_items = 1;
}

message TelemetryPosition {
    double latitude_deg = 1;
    double longitude_deg = 2;
    float absolute_altitude_m = 3;
    float relative_altitude_m = 4;
}

